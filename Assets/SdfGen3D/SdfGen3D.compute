#pragma kernel GenSdf

RWTexture3D<float4> Result;
StructuredBuffer<float3> Centres;
int NumCentres;
int NumOctaves;
float4 Size;
float BaseRadius = 1;

[numthreads(8, 8, 8)]

// GenSdf: Calculate distance from pos to nearest centre
void GenSdf(uint3 pos : SV_DispatchThreadID)
{
    float max = length(Size);
    float octaveScale = 1.0f;
    float dist = 0.0f;
    for (int octave = 0; octave < NumOctaves; octave++) {
        // multiply the position by the octave to scale it up
        // but fmod wrap around at the edge
        float3 octavePos = fmod(pos * octaveScale, Size.xyz);
        float octaveDist = max;
        for (int i = 0; i < NumCentres; i++) {
            // to make the SDF tile in three dimensions we effectively replicate
            // all the centres in all 26 surrouding cubes, so there's 3*3*3 cubes with
            // a duplicated set of centres in.

            float3 dist11 = octavePos - Centres[i];

            for (int x = -1; x <= 1; x++)
            {
                float fx = x * Size.x;
                for (int y = -1; y <= 1; y++)
                {
                    float fy = y * Size.y;
                    for (int z = -1; z <= 1; z++)
                    {
                        float fz = z * Size.z;
                        octaveDist = min(octaveDist, length(dist11 + float3(fx, fy, fz)) - BaseRadius);
                    }
                }
            }
        }
        dist += octaveDist / octaveScale;
        octaveScale *= 2.0f;
        
    }

    Result[pos.xyz] = float4(dist, dist, dist, 1);

}
